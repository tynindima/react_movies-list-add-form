{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleClassName","imgUrlClassName","imdbUrlClassName","imdbIdClassName","isTitle","isImgUrl","isImdbUrl","isImdbId","handleSubmit","event","preventDefault","addMovie","props","pattern","RegExp","clearInputs","setState","test","handleTitleInput","target","name","value","handleDescriptionInput","handleImgUrlInput","handleImdbUrlInput","handleImdbId","this","onSubmit","htmlFor","id","type","onChange","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acd2f01e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleClassName: 'input is-primary is-small',\n    imgUrlClassName: 'input is-primary is-small',\n    imdbUrlClassName: 'input is-primary is-small',\n    imdbIdClassName: 'input is-primary is-small',\n    isTitle: false,\n    isImgUrl: false,\n    isImdbUrl: false,\n    isImdbId: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { addMovie } = this.props;\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n    const movie = {\n      title, description, imgUrl, imdbUrl, imdbId,\n    };\n    // eslint-disable-next-line max-len\n    const pattern = new RegExp(`^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$`);\n\n    if (!(title === ''\n      || imgUrl === '' || imdbUrl === ''\n      || imdbId === '')) {\n      addMovie(movie);\n      this.clearInputs();\n    }\n\n    if (title === '') {\n      this.setState({\n        titleClassName: 'input is-primary is-small is-danger',\n        isTitle: true,\n      });\n    }\n\n    if (imgUrl === '' || !pattern.test(imgUrl)) {\n      this.setState({\n        imgUrlClassName: 'input is-primary is-small is-danger',\n        isImgUrl: true,\n      });\n    }\n\n    if (imdbUrl === '' || !pattern.test(imdbUrl)) {\n      this.setState({\n        imdbUrlClassName: 'input is-primary is-small is-danger',\n        isImdbUrl: true,\n      });\n    }\n\n    if (imdbId === '') {\n      this.setState({\n        imdbIdClassName: 'input is-primary is-small is-danger',\n        isImdbId: true,\n      });\n    }\n  };\n\n  handleTitleInput = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n      titleClassName: 'input is-primary is-small',\n      isTitle: false,\n    });\n  };\n\n  handleDescriptionInput = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleImgUrlInput = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n      imgUrlClassName: 'input is-primary is-small',\n      isImgUrl: false,\n    });\n  };\n\n  handleImdbUrlInput = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n      imdbUrlClassName: 'input is-primary is-small',\n      isImdbUrl: false,\n    });\n  };\n\n  handleImdbId = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n      imdbIdClassName: 'input is-primary is-small',\n      isImdbId: false,\n    });\n  };\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleClassName,\n      imgUrlClassName,\n      imdbUrlClassName,\n      imdbIdClassName,\n      isTitle,\n      isImgUrl,\n      isImdbUrl,\n      isImdbId,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"title\">Name Film:</label>\n        { isTitle\n          ? <p className=\"text-error\">Enter title!</p>\n          : <p className=\"text-error\"> </p>}\n        <input\n          name=\"title\"\n          id=\"title\"\n          value={title}\n          className={titleClassName}\n          type=\"text\"\n          onChange={this.handleTitleInput}\n        />\n\n        <label htmlFor=\"description\">Description:</label>\n        <input\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          className=\"input is-primary is-small description\"\n          type=\"textarea\"\n          onChange={this.handleDescriptionInput}\n        />\n        <label htmlFor=\"imgUrl\">imgUrl:</label>\n        { isImgUrl\n          ? <p className=\"text-error\">Invalid value!</p>\n          : <p className=\"text-error\"> </p>}\n        <input\n          name=\"imgUrl\"\n          id=\"imgUrl\"\n          value={imgUrl}\n          className={imgUrlClassName}\n          type=\"text\"\n          onChange={this.handleImgUrlInput}\n\n        />\n        <label htmlFor=\"imdbUrl\">imdbUrl:</label>\n        { isImdbUrl\n          ? <p className=\"text-error\">Invalid value!</p>\n          : <p className=\"text-error\"> </p>}\n        <input\n          name=\"imdbUrl\"\n          id=\"imdbUrl\"\n          value={imdbUrl}\n          className={imdbUrlClassName}\n          type=\"text\"\n          onChange={this.handleImdbUrlInput}\n\n        />\n        <label htmlFor=\"imdbId\">imdbId:</label>\n        { isImdbId\n          ? <p className=\"text-error\">Enter imdbId</p>\n          : <p className=\"text-error\"> </p>}\n        <input\n          name=\"imdbId\"\n          id=\"imdbId\"\n          value={imdbId}\n          className={imdbIdClassName}\n          type=\"text\"\n          onChange={this.handleImdbId}\n\n        />\n        <button type=\"submit\" className=\"button is-primary\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}