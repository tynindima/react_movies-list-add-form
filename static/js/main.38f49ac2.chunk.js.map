{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewField/NewField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewField","props","name","value","onChange","isValid","htmlFor","id","autoComplete","cx","type","NewMovie","state","handleSubmit","event","preventDefault","addMovie","pattern","RegExp","test","clearInputs","setState","prevState","obj","handleInput","target","this","onSubmit","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38f49ac2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport const NewField = (props) => {\n  const {\n    name,\n    value,\n    onChange,\n    isValid,\n  } = props;\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name}>{`${name}:`}</label>\n      {\n        isValid\n          ? (<p className=\"text-error help is-danger\">{`Enter ${name}!`}</p>)\n          : (<p className=\"text-error help is-danger\"> </p>)\n      }\n      <input\n        name={name}\n        id={name}\n        value={value}\n        autoComplete=\"off\"\n        className={\n          cx('input', 'is-primary', 'is-small', { 'is-danger': isValid })\n        }\n        type=\"text\"\n        onChange={onChange}\n      />\n    </div>\n\n  );\n};\n\nNewField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  isValid: PropTypes.bool,\n};\n\nNewField.defaultProps = {\n  isValid: false,\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\nimport { NewField } from '../NewField';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValid: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { addMovie } = this.props;\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n    const movie = {\n      title, description, imgUrl, imdbUrl, imdbId,\n    };\n    // eslint-disable-next-line max-len\n    const pattern = new RegExp(`^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$`);\n\n    if (\n      !(title === ''\n      || (imgUrl === '' || !pattern.test(imgUrl))\n        || (imdbUrl === '' || !pattern.test(imdbUrl))\n      || imdbId === '')\n    ) {\n      addMovie(movie);\n      this.clearInputs();\n    }\n\n    this.setState((prevState) => {\n      const obj = {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      };\n\n      if (title === '') {\n        obj.title = true;\n      }\n\n      if (imgUrl === '' || !pattern.test(imgUrl)) {\n        obj.imgUrl = true;\n      }\n\n      if (imdbUrl === '' || !pattern.test(imdbUrl)) {\n        obj.imdbUrl = true;\n      }\n\n      if (imdbId === '') {\n        obj.imdbId = true;\n      }\n\n      return {\n        isValid: {\n          title: obj.title,\n          imgUrl: obj.imgUrl,\n          imdbUrl: obj.imdbUrl,\n          imdbId: obj.imdbId,\n        },\n      };\n    });\n  };\n\n  handleInput = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState(prevState => ({\n      [name]: value,\n      isValid: {\n        ...prevState.isValid,\n        [name]: false,\n      },\n    }));\n  };\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isValid,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <NewField\n          name=\"title\"\n          value={title}\n          onChange={this.handleInput}\n          isValid={isValid.title}\n        />\n\n        <NewField\n          name=\"description\"\n          value={description}\n          onChange={this.handleInput}\n        />\n\n        <NewField\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleInput}\n          isValid={isValid.imgUrl}\n        />\n\n        <NewField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleInput}\n          isValid={isValid.imdbUrl}\n        />\n\n        <NewField\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleInput}\n          isValid={isValid.imdbId}\n        />\n\n        <button type=\"submit\" className=\"button is-primary\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}